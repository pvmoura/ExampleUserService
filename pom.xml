<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository  -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>user</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>user</name>
	<description>An example service to target an example user db table</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
		
		<!--For testing-->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.0.206</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.13.2</version>
			<scope>test</scope>
		</dependency>

		<!--Swagger-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.9.2</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <profiles>
                        <profile>local</profile>
                    </profiles>
                </configuration>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
        	<plugins>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.apache.maven.plugins
        								</groupId>
        								<artifactId>
        									maven-install-plugin
        								</artifactId>
        								<versionRange>
        									[2.5.2,)
        								</versionRange>
        								<goals>
        									<goal>install-file</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<ignore></ignore>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
	</build>

    <profiles>
        <!-- LOCAL -->
        <profile>
            <id>local</id>
            <properties>
                <spring.profiles.active>local</spring.profiles.active>
                <!-- db configurations -->
                <db.driverClass>org.postgresql.Driver</db.driverClass>
                <db.connectionURL>jdbc:postgresql://localhost:5432/db</db.connectionURL>
                <db.username>changeToValidUserName</db.username>
                <db.password>changeToValidPassword</db.password>
                <!-- UserName/Password for Example User API -->
                <user.api.user.name>changeToValidUserName</user.api.user.name>
                <user.api.user.password>changeToValidPassword</user.api.user.password>
                <user.api.admin.name>changeToValidUserName</user.api.admin.name>
                <user.api.admin.password>changeToValidPassword</user.api.admin.password>
            </properties>
        </profile>
        <!-- DEV -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <spring.profiles.active>dev</spring.profiles.active>
                <!-- db configurations -->
                <db.driverClass>org.postgresql.Driver</db.driverClass>
                <db.connectionURL>changeToValidDb</db.connectionURL>
                <db.username>changeToValidUserName</db.username>
                <db.password>changeToValidPassword</db.password>
                <!-- UserName/Password for Example User API -->
                <user.api.user.name>changeToValidUserName</user.api.user.name>
                <user.api.user.password>changeToValidPassword</user.api.user.password>
                <user.api.admin.name>changeToValidUserName</user.api.admin.name>
                <user.api.admin.password>changeToValidPassword</user.api.admin.password>
            </properties>
        </profile>
        <!-- PROD -->
        <profile>
            <id>prod</id>
            <properties>
                <spring.profiles.active>prod</spring.profiles.active>
                <!-- db configurations -->
                <db.driverClass>org.postgresql.Driver</db.driverClass>
                <db.connectionURL>changeToValidDb</db.connectionURL>
                <db.username>changeToValidUserName</db.username>
                <db.password>changeToValidPassword</db.password>
                <!-- UserName/Password for Example User API -->
                <user.api.user.name>changeToValidUserName</user.api.user.name>
                <user.api.user.password>changeToValidPassword</user.api.user.password>
                <user.api.admin.name>changeToValidUserName</user.api.admin.name>
                <user.api.admin.password>changeToValidPassword</user.api.admin.password>
            </properties>
        </profile>
    </profiles>

</project>
